Waston_Telco_Churn <- read_csv("~/GitHub/DeepLearning/data/Waston-Telco-Churn.csv")
View(Waston_Telco_Churn)
myData <- read_csv("~/GitHub/DeepLearning/data/Waston-Telco-Churn.csv")
# Remove unnecessary data
churn_data_tbl <- myData %>% select(-customerID) %>% drop_na() %>% select(Churn, everything())
glimpse(churn_data_tbl)
packages("keras", "lime", "tidyquant", "rsample", "recipes", "yardstick", "corrr", "readr", prompt = FALSE)
if(!require(easypackages)){install.packages("easypackages")}
library(easypackages)
packages("keras", "lime", "tidyquant", "rsample", "recipes", "yardstick", "corrr", "readr", prompt = FALSE)
library("keras", lib.loc="C:/Program Files/R/packages")
library(easypackages)
packages("keras", "lime", "tidyquant", "rsample", "recipes", "yardstick", "corrr", "readr", prompt = FALSE)
library(readr)
CaseNotesSearchABHistorical_Dec13 <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv")
View(CaseNotesSearchABHistorical_Dec13)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv")
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime), is_Resolved2 = parse_number(IsResolved)) %>%
drop_na(PartnerId)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)), %>% drop_na(PartnerId)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% drop_na(PartnerId)
glimpse(myMSdata)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>% drop_na(PartnerId)
glimpse(myMSdata)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
rename(CreateTime = CreateTime2) %>% drop_na(PartnerId) %>% glimpse()
packages("xda", prompt = FALSE)
install.packages("xda")
devtools::install_github("ujjwalkarn/xda")
library(xda)
numSummary(myMSdata)
charSummary(myMSdata)
View(myMSdata)
myGrpTTR <- group_by(myMSdata, TTR)
myPlot1data <- summarize(myGrpTTR, TTRcnt = n())
View(myMSdata)
View(myPlot1data)
range(myPlot1data$TTR)
cntNeg <- nrow(filter(myPlot1data, TTR < 1))
cntBIG <- nrow(filter(myPlot1data, TTR > 480))
breaks <- c(-Inf, seq(from=0, to=4800, by=60), Inf)
myPlot1data$TTR_bin <- cust(myPlot1data$TTR, breaks = breaks)
myBreaks <- c(-Inf, seq(from=0, to=4800, by=60), Inf)
myPlot1data$TTR_bin <- cust(myPlot1data$TTR, breaks = myBreaks)
myPlot1data$TTR_bin <- cut(myPlot1data$TTR, breaks = myBreaks)
ggplot(myPlot1data, aes(TTR_bin)) + geom_bar()
tail(myPlot1data)
nrow(filter(myPlot1data, TTR_bin == (4.8e+03, Inf])))
tail(myPlot1data)
nrow(filter(myPlot1data, TTR_bin == "(4.8e+03, Inf]")))
nrow(filter(myPlot1data, TTR_bin == "(4.8e+03, Inf]"))
myBreaks_Week <- c(-Inf, seq(from=0, to = 2400), Inf)
myPlot1data$TTR_bin_week <- cut(myPlot1data$TTR, breaks = myBreaks)
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar()
myBreaks_Week <- c(-Inf, seq(from=0, to = 24000, by = 2400), Inf)
myPlot1data$TTR_bin_week <- cut(myPlot1data$TTR, breaks = myBreaks)
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar()
myBreaks_Week <- c(-Inf, seq(from=0, to = 240000, by = 2400), Inf)
myPlot1data$TTR_bin_week <- cut(myPlot1data$TTR, breaks = myBreaks)
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar()
myBreaks_Week <- c(-Inf, seq(from=0, to = 240000, by = 2400), Inf)
myPlot1data$TTR_bin_week <- cut(myPlot1data$TTR, breaks = myBreaks_Week)
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar()
myBreaks_2Week <- c(-Inf, seq(from=0, to = 240000, by = 4800), Inf)
myPlot1data$TTR_bin_week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week)
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar()
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar() + coord_flip()
myPlot1data$TTR_bin_week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week, dig.lab = 8)
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar() + coord_flip()
myPlot1data %>% filter(TTR_bin < 100800) %>%  ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar() + coord_flip()
myPlot1data %>% filter(TTR_bin < 100800) %>%  ggplot(aes(TTR_bin_week)) + geom_bar() + coord_flip()
ggplot(filter(myPlot1data, TTR < 21900), aes(TTR_bin_week)) + geom_bar() + coord_flip()
charSummary(myMSdata)
names(myMSdata$ReScenario)
myMSdata <- myMSdata %>% mutate_if(is.character, as.factor)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
rename(CreateTime = CreateTime2) %>% drop_na(PartnerId) %>% glimpse()
myMSdata[5,6]
myMSdata[,c(5,6)]
names(myMSdata)
myMSdata[,c(4,6)]
myMSdata <- myMSdata[,c(4,6)] %>% mutate_if(is.character, as.factor)
glimpse(myMSdata)
if(!require(easypackages)){install.packages("easypackages")}
library(easypackages)
packages("dplyr", "ggplot2", "bayesAB", "gridExtra", prompt = FALSE)
set.seed(14641)
A_binom <- rbinom(500, 1, .25)
B_binom <- rbinom(500, 1, .2)
{par(mfrow=c(1,2))
barplot(table(A_binom), main = "Clicks on A", ylim = c(0, 500))
barplot(table(B_binom), main = "Clicks on B", ylim = c(0, 500))
}
par()
summary(A_binom)
summary(B_binom)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
mu <- .25
var <-  .05^2
estBetaParams(mu, var)
plotBeta(18.5, 55.5)
p1 <- plotBeta(20, 50) + ggtitle("α=20 & β=50")
p2 <- plotBeta(30, 150) + ggtitle("α=30 & β=150")
p3 <- plotBeta(60, 300) + ggtitle("α=60 & β=300")
p4 <- plotBeta(65, 200) + ggtitle("α=65 & β=200")
p5 <- plotBeta(3,7) + ggtitle("α=3 & β=7")
grid.arrange(p1, p2, p3, p4, p5, ncol=2)
plotBeta(65, 200)
ab1 <- bayesTest(A_binom, B_binom, priors = c(alpha = 65, beta = 200), n_samples = 1000, distribution = 'bernoulli')
print(ab1)
summary(ab1)
plot(ab1)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
rename(CreateTime = CreateTime2) %>% drop_na(PartnerId) %>% glimpse()
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
rename(CreateTime = CreateTime2) %>% drop_na(PartnerId) %>% glimpse()
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
drop_na(PartnerId) %>% glimpse()
names(myMSdata)
myMSdata[, c(4,6)] <- myMSdata[,c(4,6)] %>% mutate_if(is.character, as.factor)
glimpse(myMSdata)
charSummary(myMSdata)
levels(myMSdata$ReScenario)
myMSdata_ReOpen <- filter(myMSdata, ReScenario == "Customer Reopen")
myMSdata <- filter(myMSdata, TTR < 0)
myMSdata_ReOpen <- filter(myMSdata_ReOpen, TTR < 0)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
drop_na(PartnerId) %>% glimpse()
names(myMSdata)
myMSdata[, c(4,6)] <- myMSdata[,c(4,6)] %>% mutate_if(is.character, as.factor)
glimpse(myMSdata)
myGrpTTR <- group_by(myMSdata, TTR)
myPlot1data <- summarize(myGrpTTR, TTRcnt = n())
range(myPlot1data)
cntNeg <- nrow(filter(myPlot1data, TTR < 1))
cntBIG <- nrow(filter(myPlot1data, TTR > 480))
myBreaks <- c(-Inf, seq(from=0, to=4800, by=60), Inf)
myPlot1data$TTR_bin <- cut(myPlot1data$TTR, breaks = myBreaks)
tail(myPlot1data)
nrow(filter(myPlot1data, TTR_bin == "(4.8e+03, Inf]"))
myBreaks_Week <- c(-Inf, seq(from=0, to = 240000, by = 2400), Inf)
myBreaks_2Week <- c(-Inf, seq(from=0, to = 240000, by = 4800), Inf)
myPlot1data$TTR_bin_week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week, dig.lab = 8)
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar() + coord_flip()
ggplot(filter(myPlot1data, TTR < 21900), aes(TTR_bin_week)) + geom_bar() + coord_flip()
myMSdata <- filter(myMSdata, TTR > 0)
myMSdata_ReOpen <- filter(myMSdata_ReOpen, TTR > 0)
myMSdata_ReOpen <- filter(myMSdata, ReScenario == "Customer Reopen")
View(myMSdata_ReOpen)
myMSdata_ReOpen <- filter(myMSdata, ReScenario == "Customer Reopen")
myMSdata_ReOpen <- drop_na(myMSdata_ReOpen$IsResolved)
str(myMSdata_ReOpen)
unique(myMSdata_ReOpen$IsResolved)
myMSdata_ReOpen <- mutate(myMSdata_ReOpen, IsResolved = parse_logical(IsResolved))
table(myMSdata_ReOpen$IsResolved)
unique(myMSdata_ReOpen$IsResolved)
myMSdata_ReOpen$IsResolved <-  drop_na(myMSdata_ReOpen$IsResolved)
myMSdata_ReOpen <-  filter(myMSdata_ReOpen, !is.na(IsResolved))
table(myMSdata_ReOpen$IsResolved)
unique(myMSdata_ReOpen$IsResolved)
myMSdata_ReOpen <- myMSdata_ReOpen %>% mutate(ReOpenNum = ifelse(ReOpen == TRUE, 1,0))
myMSdata_ReOpen <- myMSdata_ReOpen %>% mutate(IsResolvedNum = ifelse(myMSdata_ReOpen$IsResolved == TRUE, 1,0))
unique(myMSdata_ReOpen$Roles)
control <- myMSdata_ReOpen$IsResolvedNum
ggplot(myMSdata_ReOpen, aes(x=Roles)) + geom_bar()
ggplot(myMSdata_ReOpen, aes(x=Roles)) + geom_bar() + coord_flip()
ggplot(myMSdata, aes(x=Roles)) + geom_bar() + coord_flip()
myMSdata2 <- myMSdata %>% mutate(Roles_match_Agent = str_detect(Roles, "Agent"))
??str_detect
library(strinr)
library(stringr)
myMSdata2 <- myMSdata %>% mutate(Roles_match_Agent = str_detect(Roles, "Agent"))
View(myMSdata2)
myMSdata2 <- myMSdata %>% mutate(Roles_match_Rave2 = str_detect(Roles, "RaveV2"))
myMSdata2 <- myMSdata %>% mutate(Roles_match_Agent = str_detect(Roles, "Agent"))
table(myMSdata2$Roles_match_Agent)
myMSdata2 <- myMSdata %>% mutate(Roles_match_Rave2 = str_detect(Roles, "RaveV2"))
myMSdata2 <- myMSdata %>% mutate(Roles_match_Agent = str_detect(Roles, "Agent"))
myMSdata2 <- myMSdata2 %>% mutate(Roles_match_Rave2 = str_detect(Roles, "RaveV2"))
table(myMSdata2$Roles_match_Rave2)
addmargins(myMSdata2$Roles_match_Agent)
prop.table(myMSdata2$Roles_match_Agent)
prop.table(table(myMSdata2$Roles_match_Agent),1)
prop.table(table(myMSdata2$Roles_match_Agent),2)
prop.table(table(myMSdata2$Roles_match_Agent))
prop.table(table(myMSdata2$Roles_match_Rave2))
#Generate alpha and beta for beta distributions priors
a <- Beta_Parameters(0.15,0.0016)#0.04^2
#Generate alpha and beta for beta distributions priors
a <- Beta_Parameters(0.15,0.0016)#0.04^2
Beta_Parameters <- function(mean, variance) {
alpha <- ((1 - mean) / variance - 1 / mean) * mean ^ 2
beta <- alpha * (1 / mean - 1)
return(Beta_Parameters = list(alpha = alpha, beta = beta))
}
#Generate alpha and beta for beta distributions priors
a <- Beta_Parameters(0.15,0.0016)#0.04^2
# b <- Beta_Parameters(0.16,0.0016)
# c <- Beta_Parameters(0.17,0.0016)
#Plot prior beta distibutions for the three ads (A,B, and C)
x = seq(0, 0.4, length = 10000)
y = dbeta(x, a$alpha, a$beta)
# y1 = dbeta(x, b$alpha, b$beta)
# y2 = dbeta(x, c$alpha, c$beta)
{plot(x, y, type = "l", col = "blue", ylim = c(0, 12),xlim = c(0, .40),lwd = 2, ylab =' Density', xlab = expression(theta))
# lines(x, y1, col = "orange", lwd = 2)
# lines(x, y2, col = "black", lwd = 2)
legend(0.1, 12, legend = c("A", "B", "C"), col = c("blue","orange","black"), lwd = 5, cex = 1, horiz = TRUE)}
#Generate alpha and beta for beta distributions priors
a <- Beta_Parameters(0.15,0.0016)#0.04^2
# b <- Beta_Parameters(0.16,0.0016)
# c <- Beta_Parameters(0.17,0.0016)
#Plot prior beta distibutions for the three ads (A,B, and C)
x = seq(0, 0.4, length = 10000)
y = dbeta(x, a$alpha, a$beta)
# y1 = dbeta(x, b$alpha, b$beta)
# y2 = dbeta(x, c$alpha, c$beta)
{plot(x, y, type = "l", col = "blue", ylim = c(0, 12),xlim = c(0, .40),lwd = 2, ylab =' Density', xlab = expression(theta))
# lines(x, y1, col = "orange", lwd = 2)
# lines(x, y2, col = "black", lwd = 2)
#legend(0.1, 12, legend = c("A", "B", "C"), col = c("blue","orange","black"), lwd = 5, cex = 1, horiz = TRUE)
legend(0.1, 12, legend = c("control"), col = c("blue"), lwd = 5, cex = 1, horiz = TRUE)
}
mu_control <- mean(control)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
if(!require(easypackages)){install.packages("easypackages")}
library(easypackages)
packages("dplyr", "ggplot2", "bayesAB", "gridExtra", prompt = FALSE)
packages("xda", prompt = FALSE)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
if(!require(easypackages)){install.packages("easypackages")}
library(easypackages)
packages("dplyr", "ggplot2", "bayesAB", "gridExtra", "readr", prompt = FALSE)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
drop_na(PartnerId) %>% glimpse()
if(!require(easypackages)){install.packages("easypackages")}
library(easypackages)
packages("dplyr", "ggplot2", "bayesAB", "gridExtra", "readr", "lubridate", prompt = FALSE)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
drop_na(PartnerId) %>% glimpse()
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
tidyr::drop_na(PartnerId) %>% glimpse()
names(myMSdata)
myMSdata[, c(4,6)] <- myMSdata[,c(4,6)] %>% mutate_if(is.character, as.factor)
glimpse(myMSdata)
numSummary(myMSdata)
ggplot(myMSdata, aes(x=Roles)) + geom_bar() + coord_flip()
myGrpTTR <- group_by(myMSdata, TTR)
myPlot1data <- summarize(myGrpTTR, TTRcnt = n())
range(myPlot1data)
cntNeg <- nrow(filter(myPlot1data, TTR < 1))
cntBIG <- nrow(filter(myPlot1data, TTR > 480))
myBreaks <- c(-Inf, seq(from=0, to=4800, by=60), Inf)
myPlot1data$TTR_bin <- cut(myPlot1data$TTR, breaks = myBreaks)
tail(myPlot1data)
nrow(filter(myPlot1data, TTR_bin == "(4.8e+03, Inf]"))
myBreaks_Week <- c(-Inf, seq(from=0, to = 240000, by = 2400), Inf)
myBreaks_2Week <- c(-Inf, seq(from=0, to = 240000, by = 4800), Inf)
myPlot1data$TTR_bin_week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week, dig.lab = 8)
ggplot(myPlot1data, aes(TTR_bin_week)) + geom_bar() + coord_flip()
ggplot(filter(myPlot1data, TTR < 21900), aes(TTR_bin_week)) + geom_bar() + coord_flip()
myPlot1data
myBreaks_week <- c(-Inf, seq(from=0, to=2400, by=60), Inf)
myPlot1data$TTR_week <- cut(myPlot1data$TTR, breaks = myBreaks_week, dig.lab = 8)
tail(myPlot1data)
myBreaks_week <- c(-Inf, seq(from=0, to=240000, by=2400), Inf)
myPlot1data$TTR_week <- cut(myPlot1data$TTR, breaks = myBreaks_week, dig.lab = 8)
myBreaks_week <- c(-Inf, seq(from=0, to=240000, by=2400), Inf)
myPlot1data$TTR_week <- cut(myPlot1data$TTR, breaks = myBreaks_week, dig.lab = 8)
myGrpTTR <- group_by(myMSdata, TTR)
myPlot1data <- summarize(myGrpTTR, TTRcnt = n())
range(myPlot1data)
cntNeg <- nrow(filter(myPlot1data, TTR < 1))
cntBIG <- nrow(filter(myPlot1data, TTR > 480))
cntBIG <- nrow(filter(myPlot1data, TTR > 4800))#2 weeks
myBreaks_week <- c(-Inf, seq(from=0, to=240000, by=2400), Inf)
myPlot1data$TTR_week <- cut(myPlot1data$TTR, breaks = myBreaks_week, dig.lab = 8)
tail(myPlot1data)
myBreaks_2Week <- c(-Inf, seq(from=0, to = 240000, by = 4800), Inf)
myPlot1data$TTR_2week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week, dig.lab = 8)
ggplot(myPlot1data, aes(TTR_2week)) + geom_bar() + coord_flip()
ggplot(filter(myPlot1data, TTR < 21900), aes(TTR_2week)) + geom_bar() + coord_flip()
myMSdata <- filter(myMSdata, TTR > 0)
levels(myMSdata$ReScenario)
myMSdata_ReOpen <- filter(myMSdata, ReScenario == "Customer Reopen")
myMSdata_ReOpen <- mutate(myMSdata_ReOpen, IsResolved = parse_logical(IsResolved))
myMSdata_ReOpen <-  filter(myMSdata_ReOpen, !is.na(IsResolved))
table(myMSdata_ReOpen$IsResolved)
myMSdata_ReOpen <- myMSdata_ReOpen %>% mutate(IsResolvedNum = ifelse(myMSdata_ReOpen$IsResolved == TRUE, 1,0))
control <- myMSdata_ReOpen$IsResolvedNum
mu_control <- mean(control)
var_control <- var(control)
Beta_Parameters <- function(mean, variance) {
alpha <- ((1 - mean) / variance - 1 / mean) * mean ^ 2
beta <- alpha * (1 / mean - 1)
return(Beta_Parameters = list(alpha = alpha, beta = beta))
}
Beta_Parameters(mu_control, var_control)
myBetas <- Beta_Parameters(mu_control, var_control)
plotBeta(myBetas$alpha, myBetas$beta)
mu <- .25
var <-  .05^2
Beta_Parameters(mu, var)
mu_control
var_control
myBetas <- Beta_Parameters(mu_control, var_control)
myBetas
plotBeta(50, 50)
plotBeta(10, 50)
plotBeta(10, 100)
plotBeta(20, 100)
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
tidyr::drop_na(PartnerId) %>% glimpse()
names(myMSdata)
myMSdata[, c(4,6)] <- myMSdata[,c(4,6)] %>% mutate_if(is.character, as.factor)
glimpse(myMSdata)
numSummary(myMSdata)
charSummary(myMSdata)
ggplot(myMSdata, aes(x=Roles)) + geom_bar() + coord_flip()
table(myMSdata$Roles)
myGrpTTR <- group_by(myMSdata, TTR)
myPlot1data <- summarize(myGrpTTR, TTRcnt = n())
myPlot1data
range(myPlot1data)
cntNeg <- nrow(filter(myPlot1data, TTR < 1))
cntBIG <- nrow(filter(myPlot1data, TTR > 4800))#2 weeks
myBreaks_week <- c(-Inf, seq(from=0, to=240000, by=2400), Inf)
cntBIG <- nrow(filter(myPlot1data, TTR > 20160))#2 weeks
myBreaks_week <- c(-Inf, seq(from=0, to=2400000, by=10080), Inf)
myPlot1data$TTR_week <- cut(myPlot1data$TTR, breaks = myBreaks_week, dig.lab = 8)
myBreaks_2Week <- c(-Inf, seq(from=0, to = 2400000, by = 20160), Inf)
myPlot1data$TTR_2week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week, dig.lab = 8)
ggplot(myPlot1data, aes(TTR_2week)) + geom_bar() + coord_flip()
View(myPlot1data)
nrow(filter(myPlot1data, TTR > 20160))
myBreaks_2Week <- c(-Inf, seq(from=0, to = 240000, by = 20160), Inf)
myPlot1data$TTR_2week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week, dig.lab = 8)
ggplot(myPlot1data, aes(TTR_2week)) + geom_bar() + coord_flip()
myMSdata <- filter(myMSdata, TTR > 0)
myMSdata_ReOpen <- filter(myMSdata, ReScenario == "Customer Reopen")
myMSdata_ReOpen <- mutate(myMSdata_ReOpen, IsResolved = parse_logical(IsResolved))
myMSdata_ReOpen <-  filter(myMSdata_ReOpen, !is.na(IsResolved))
table(myMSdata_ReOpen$IsResolved)
myMSdata_ReOpen <- myMSdata_ReOpen %>% mutate(IsResolvedNum = ifelse(myMSdata_ReOpen$IsResolved == TRUE, 1,0))
View(myMSdata_ReOpen)
mu_control <- mean(control)
control <- myMSdata_ReOpen$IsResolvedNum
plotBeta(20, 100)#look ok?
mu_control <- mean(control)
var_control <- var(control)
plotBeta(20, 100)#look ok?
library(stringr)
myMSdata2 <- myMSdata %>% mutate(Roles_match_Agent = str_detect(Roles, "Agent"))
table(myMSdata2$Roles_match_Agent)
myMSdata2 <- myMSdata2 %>% mutate(Roles_match_Rave2 = str_detect(Roles, "RaveV2"))
table(myMSdata2$Roles_match_Rave2)
prop.table(table(myMSdata2$Roles_match_Agent))
prop.table(table(myMSdata2$Roles_match_Rave2))
levels(myMSdata2$Roles)
myMSdata2 <- myMSdata2 %>% mutate(Roles_match_FirstRelease = str_detect(Roles, "FirstRelease"))
table(myMSdata2$Roles_match_FirstRelease)
prop.table(table(myMSdata2$Roles_match_FirstRelease))
ab1 <- bayesTest(control, B_binom, priors = c(alpha = 90, beta = 100), n_samples = 2000, distribution = 'bernoulli')
plotBeta(90, 100)#look ok?
plotBeta(180, 100)#look ok?
plotBeta(200, 100)#look ok?
myBetas <- Beta_Parameters(.93, .02)#returning negative values - need estimates of mean and sd
Beta_Parameters <- function(mean, variance) {
alpha <- ((1 - mean) / variance - 1 / mean) * mean ^ 2
beta <- alpha * (1 / mean - 1)
return(Beta_Parameters = list(alpha = alpha, beta = beta))
}
myBetas <- Beta_Parameters(.93, .02)#returning negative values - need estimates of mean and sd
plotBeta(myBetas$alpha, myBetas$beta)
myBetas
myBetas <- Beta_Parameters(.93, .01)#returning negative values - need estimates of mean and sd
plotBeta(myBetas$alpha, myBetas$beta)
myBetas
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
tidyr::drop_na(PartnerId) %>% glimpse()
names(myMSdata)
myMSdata[, c(4,6)] <- myMSdata[,c(4,6)] %>% mutate_if(is.character, as.factor)
glimpse(myMSdata)
myGrpTTR <- group_by(myMSdata, TTR)
myPlot1data <- summarize(myGrpTTR, TTRcnt = n())
sum(myPlot1data$TTRcnt)
filter(myMSdata, TTR < 0)
lessZero <- filter(myMSdata, TTR < 1)
View(lessZero)
write.csv(lessZero, "lessZero.csv")
getwd()
myBreaks_week <- c(-Inf, seq(from=0, to=max(myMSdata$TTR), by=10080), Inf)#10080 min/week
myPlot1data$TTR_week <- cut(myPlot1data$TTR, breaks = myBreaks_week, dig.lab = 8)
sum(myPlot1data$TTRcnt)
sum(myPlot1data$TTR_week)
myBreaks_2Week <- c(-Inf, seq(from=0, to = 240000, by = 20160), Inf)
myPlot1data$TTR_2week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_week, y=TTRcnt)) + geom_bar() + coord_flip()
ggplot(myPlot1data, aes(x=TTR_week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
options(scipen = 999)
ggplot(myPlot1data, aes(x=TTR_week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myPlot1data$TTR_2week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week)
ggplot(myPlot1data, aes(x=TTR_2week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myBreaks_day <- c(-Inf, seq(from=0, to=max(myMSdata$TTR), by=1440), Inf)#
myPlot1data$TTR_day <- cut(myPlot1data$TTR, breaks = myBreaks_day, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<5000), aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<50000), aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<25000), aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<20000), aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<20000), aes(x=TTR_week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<200000), aes(x=TTR_week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<100000), aes(x=TTR_week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<75000), aes(x=TTR_week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<55000), aes(x=TTR_week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myBreaks_2Week <- c(-Inf, seq(from=0, to = 240000, by = 20160), Inf)
myPlot1data$TTR_2week <- cut(myPlot1data$TTR, breaks = myBreaks_2Week, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_2week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myBreaks_4Week <- c(-Inf, seq(from=0, to=max(myMSdata$TTR), by = 40320), Inf)
myPlot1data$TTR_2week <- cut(myPlot1data$TTR, breaks = myBreaks_4Week, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_4week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myBreaks_4Week <- c(-Inf, seq(from=0, to=max(myMSdata$TTR), by = 40320), Inf)
myPlot1data$TTR_4week <- cut(myPlot1data$TTR, breaks = myBreaks_4Week, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_4week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myBreaks_tail <- c(seq(from=80000, to=max(myMSdata$TTR), by = 10080), Inf)
myPlot1data$TTR_tailk <- cut(myPlot1data$TTR, breaks = myBreaks_tail, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_tail, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myPlot1data$TTR_tail <- cut(myPlot1data$TTR, breaks = myBreaks_tail, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_tail, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myBreaks_day <- c(seq(from=0, to=max(myMSdata$TTR), by=1440), Inf)#
myPlot1data$TTR_day <- cut(myPlot1data$TTR, breaks = myBreaks_day, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(myPlot1data, aes(x=TTR_4week, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<20000), aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myMSdata <- read_csv("~/GitHub/Valorem/ClientProjects/MS_O365/data/CaseNotesSearchABHistorical_Dec13.csv", progress = FALSE)
glimpse(myMSdata)
myMSdata <- myMSdata %>% mutate(CreateTime2 = mdy_hm(CreateDateTime)) %>% select(-CreateDateTime) %>%
tidyr::drop_na(PartnerId) %>% glimpse()
names(myMSdata)
myMSdata[, c(4,6)] <- myMSdata[,c(4,6)] %>% mutate_if(is.character, as.factor)
glimpse(myMSdata)
numSummary(myMSdata)
charSummary(myMSdata)
ggplot(myMSdata, aes(x=Roles)) + geom_bar() + coord_flip()
table(myMSdata$Roles)
options(scipen = 999)
myGrpTTR <- group_by(myMSdata, TTR)
myPlot1data <- summarize(myGrpTTR, TTRcnt = n())
cntNeg <- nrow(filter(myPlot1data, TTR < 1))
cntBIG <- nrow(filter(myPlot1data, TTR > 20160))#2 weeks
myBreaks_day <- c(seq(from=0, to=max(myMSdata$TTR), by=1440), Inf)#
myPlot1data$TTR_day <- cut(myPlot1data$TTR, breaks = myBreaks_day, dig.lab = 8)
ggplot(myPlot1data, aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
ggplot(filter(myPlot1data, TTR<20000), aes(x=TTR_day, y=TTRcnt)) + geom_bar(stat = "identity") + coord_flip()
myMSdata <- filter(myMSdata, TTR > 0)
myMSdata_ReOpen <- filter(myMSdata, ReScenario == "Customer Reopen")
myMSdata_ReOpen <- mutate(myMSdata_ReOpen, IsResolved = parse_logical(IsResolved))
myMSdata_ReOpen <-  filter(myMSdata_ReOpen, !is.na(IsResolved))
table(myMSdata_ReOpen$IsResolved)
myMSdata_ReOpen <- myMSdata_ReOpen %>% mutate(IsResolvedNum = ifelse(myMSdata_ReOpen$IsResolved == TRUE, 1,0))
control <- myMSdata_ReOpen$IsResolvedNum
mu_control <- mean(control)
var_control <- var(control)
plotBeta(200, 100)#lnot good
myBetas <- Beta_Parameters(mu_control, var_control)#returning negative values - need estimates of mean and sd
Beta_Parameters <- function(mean, variance) {
alpha <- ((1 - mean) / variance - 1 / mean) * mean ^ 2
beta <- alpha * (1 / mean - 1)
return(Beta_Parameters = list(alpha = alpha, beta = beta))
}
plotBeta(myBetas$alpha, myBetas$beta)
myBetas
myBetas <- Beta_Parameters(mu_control, var_control)#returning negative values - need estimates of mean and sd
plotBeta(myBetas$alpha, myBetas$beta)
myBetas
myBetas <- Beta_Parameters(.93, .01)#returning negative values - need estimates of mean and sd
plotBeta(myBetas$alpha, myBetas$beta)
myBetas
table(myPlot1data$TTR_day)
table(filter(myPlot1data, TTR > 86399)$TTR_day)
nrow(filter(myPlot1data, TTR > 86399))
cat("The number of records with a TTR longer than 60 days is ", nrow(filter(myPlot1data, TTR > 86399)))
cat("The number of records with a TTR longer than 60 days is", nrow(filter(myPlot1data, TTR > 86400)))
cat("The number of records with a TTR longer than 60 days is", nrow(filter(myPlot1data, TTR > 86400),"."))
